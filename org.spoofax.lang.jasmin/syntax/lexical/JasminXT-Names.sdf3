module lexical/JasminXT-Names

imports
  lexical/JasminXT-Numbers
  lexical/JasminXT-Strings
  lexical/JasminXT-Descriptors

context-free start-symbols
  Identifier
  SQIdentifier
  QualifiedName
  LabelName
  MethodName
  ClassRef
  VarRef
  LabelRef
  FRef
  MRef
  BaseTypeName

lexical syntax
  Identifier = [A-Za-z] [A-Za-z0-9\_]*

  SQIdentifier = Identifier
  SQIdentifier = "'" Identifier "'"

  QualifiedName = {Identifier "/"}+

  LabelName = ~[\=\:\.\"\-\ \t\n\r0-9] ~[\=\:\.\"\-\ \t\n\r]*

lexical restrictions		
  Identifier -/- [a-zA-Z0-9\_]
  LabelName  -/- ~[\=\:\.\"\-\ \t\n\r]

templates
  FileName        = [[String]]
  ClassName       = [[QualifiedName]]
  AttributeName   = [[Identifier]]
  AnnotationName  = [[Identifier]]
  FieldName       = [[Identifier]]
  MethodName      = [[Identifier]]
  MethodName.Init = [<init>]
  VarName         = [[SQIdentifier]]

templates
  ClassRef.CRef     = [[ClassName]]
  VarRef.VarNum     = [[Int]]
  VarRef.VarRef     = [[VarName]]
  LabelRef.LabelRef = [[LabelName]]
  LabelRef.Absolute = [[Int]]

  FRef.FRef = [[FieldName]]
  MRef.MRef = [[MethodName]]

syntax		
  <ClassRef-CF> "/" <FRef-CF> <LAYOUT?-CF> <FieldDescriptor-CF>  -> <FieldRef-CF>	 {"JBCFieldRef"}		
  <ClassRef-CF> "/" <MRef-CF> <LAYOUT?-CF> <MethodDescriptor-CF> -> <MethodRef-CF> {"JBCMethodRef"}

templates
  BaseTypeName.ByteName    = [byte]
  BaseTypeName.CharName    = [char]
  BaseTypeName.DoubleName  = [double]
  BaseTypeName.FloatName   = [float]
  BaseTypeName.IntName     = [int]
  BaseTypeName.LongName    = [long]
  BaseTypeName.ShortName   = [short]
  BaseTypeName.BooleanName = [boolean]
